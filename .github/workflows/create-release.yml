name: Create Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.0.4)'
        required: true
        type: string

permissions:
  contents: write

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest

    steps:
      - name: Validate version format
        run: |
          VERSION="${{ inputs.version }}"
          if [[ ! "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9]+)?$ ]]; then
            echo "Error: Invalid version format: $VERSION"
            echo "Expected format: X.Y.Z or X.Y.Z-prerelease"
            exit 1
          fi
          echo "Version validated: $VERSION"

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build Release
        run: dotnet build --configuration Release --no-restore -p:ContinuousIntegrationBuild=true

      - name: Run tests
        run: dotnet test --configuration Release --no-build --verbosity normal

      - name: Extract release notes from CHANGELOG
        id: extract-notes
        run: |
          VERSION="${{ inputs.version }}"

          # Extract the section for this version from CHANGELOG.md
          # Find lines between ## [VERSION] and the next ## heading
          NOTES=$(sed -n "/## \[$VERSION\]/,/^## \[/p" CHANGELOG.md | sed '$ d' | tail -n +2)

          if [ -z "$NOTES" ]; then
            echo "Warning: No changelog entry found for version $VERSION"
            NOTES="See release notes: https://github.com/KoalaFacts/HeroSD-JWT/releases/tag/v$VERSION"
          else
            # Add link to full changelog at the end
            NOTES="$NOTES

See full changelog: https://github.com/KoalaFacts/HeroSD-JWT/blob/main/CHANGELOG.md"
          fi

          # Save to multiline environment variable
          echo "RELEASE_NOTES<<EOF" >> $GITHUB_ENV
          echo "$NOTES" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

          echo "Release notes extracted from CHANGELOG.md"

      - name: Pack NuGet packages
        run: |
          dotnet pack src/HeroSdJwt/HeroSdJwt.csproj \
            --configuration Release \
            --no-build \
            -p:PackageVersion=${{ inputs.version }} \
            -p:Version=${{ inputs.version }} \
            -p:PackageReleaseNotes="${{ env.RELEASE_NOTES }}"

      - name: Verify packages were created
        run: |
          if [ ! -f "src/HeroSdJwt/bin/Release/HeroSD-JWT.${{ inputs.version }}.nupkg" ]; then
            echo "Error: Main package not found"
            exit 1
          fi
          if [ ! -f "src/HeroSdJwt/bin/Release/HeroSD-JWT.${{ inputs.version }}.snupkg" ]; then
            echo "Error: Symbol package not found"
            exit 1
          fi
          echo "Packages verified:"
          ls -lh src/HeroSdJwt/bin/Release/HeroSD-JWT.${{ inputs.version }}.*

      - name: Generate release notes
        id: release-notes
        run: |
          cat > release-notes.md << 'EOF'
          ## HeroSD-JWT v${{ inputs.version }}

          **Production-ready .NET library for SD-JWT (Selective Disclosure JWT)**

          ### Features
          - âœ… Complete SD-JWT implementation per IETF draft-ietf-oauth-selective-disclosure-jwt
          - âœ… Array element disclosure support
          - âœ… Nested claims with recursive processing
          - âœ… Key binding (holder binding)
          - âœ… Multiple signature algorithms: HS256, RS256, ES256
          - âœ… Zero third-party dependencies (BCL only)
          - âœ… Multi-targeting: .NET 8.0 (LTS) + .NET 9.0
          - âœ… Native AOT compatible
          - âœ… 277 comprehensive tests
          - âœ… Full XML documentation
          - âœ… Symbol package (.snupkg) with Source Link debugging

          ### Installation
          ```bash
          dotnet add package HeroSD-JWT --version ${{ inputs.version }}
          ```

          ### Package Details
          - **Frameworks**: net8.0, net9.0
          - **Dependencies**: Microsoft.Bcl.Memory (net8.0 only)

          ### Documentation
          - [README](https://github.com/KoalaFacts/HeroSD-JWT/blob/main/README.md)
          - [NuGet Package](https://www.nuget.org/packages/HeroSD-JWT/${{ inputs.version }})

          ---
          ðŸŽ¯ **Production ready** - Fully tested and verified!
          EOF
          echo "Release notes generated"

      - name: Create GitHub Release
        run: |
          echo "Creating release v${{ inputs.version }}..."

          # Create release directly (not draft) with packages
          # This will trigger the publish-nuget workflow immediately
          gh release create v${{ inputs.version }} \
            --title "Release v${{ inputs.version }}" \
            --notes-file release-notes.md \
            src/HeroSdJwt/bin/Release/HeroSD-JWT.${{ inputs.version }}.nupkg \
            src/HeroSdJwt/bin/Release/HeroSD-JWT.${{ inputs.version }}.snupkg

          echo "âœ… Release created and published!"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Verify release was created
        run: |
          echo "Verifying release v${{ inputs.version }}..."
          gh release view v${{ inputs.version }} --json assets --jq '.assets[].name'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Release summary
        run: |
          echo "## Release Created Successfully! ðŸŽ‰" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Version**: v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Release URL**: https://github.com/${{ github.repository }}/releases/tag/v${{ inputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "The publish-nuget workflow will automatically trigger and publish to NuGet.org using trusted publishing." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Packages:**" >> $GITHUB_STEP_SUMMARY
          echo "- HeroSD-JWT.${{ inputs.version }}.nupkg" >> $GITHUB_STEP_SUMMARY
          echo "- HeroSD-JWT.${{ inputs.version }}.snupkg" >> $GITHUB_STEP_SUMMARY
