name: CI

on:
  push:
    branches: [ main, develop, 'claude/**' ]
  pull_request:
    branches: [ main, develop ]
  merge_group:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        dotnet-version: ['8.0.x', '9.0.x']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for Source Link

    - name: Setup .NET ${{ matrix.dotnet-version }}
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
        cache: true
        cache-dependency-path: '**/packages.lock.json'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --configuration Release --no-restore

    - name: Run tests
      run: dotnet test --configuration Release --no-build --verbosity normal --logger "trx;LogFileName=test-results.trx" --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: Publish test results
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always() && runner.os == 'Linux' && matrix.dotnet-version == '9.0.x'
      with:
        files: 'TestResults/**/*.trx'
        check_name: 'Test Results (${{ matrix.os }} - .NET ${{ matrix.dotnet-version }})'

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.os }}-${{ matrix.dotnet-version }}
        path: TestResults/**/*.trx
        retention-days: 30

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.dotnet-version == '9.0.x'
      uses: codecov/codecov-action@v4
      with:
        files: 'TestResults/**/coverage.cobertura.xml'
        fail_ci_if_error: false
        flags: unittests
        name: codecov-${{ matrix.os }}

  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        cache: true

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build (with warnings as errors)
      run: dotnet build --configuration Release --no-restore /p:TreatWarningsAsErrors=true

    - name: Check formatting
      run: dotnet format --verify-no-changes --verbosity diagnostic
      continue-on-error: true

  pack:
    name: Pack NuGet
    runs-on: ubuntu-latest
    needs: [build-and-test, code-quality]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        cache: true

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Pack
      run: dotnet pack --configuration Release --no-restore --output ./artifacts

    - name: Upload NuGet package artifact
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package
        path: ./artifacts/*.nupkg
        retention-days: 7
